
In moonfrp.sh line 147:
WHITE='\033[1;37m'
^---^ SC2034 (warning): WHITE appears unused. Verify use (or export if used externally).


In moonfrp.sh line 167:
MOONFRP_REPO_URL="https://api.github.com/repos/k4lantar4/moonfrp/releases/latest"
^--------------^ SC2034 (warning): MOONFRP_REPO_URL appears unused. Verify use (or export if used externally).


In moonfrp.sh line 218:
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 234:
handle_error() {
^-- SC2329 (info): This function is never invoked. Check usage (or ignored if invoked indirectly).


In moonfrp.sh line 307:
    if read -r $var_name; then
               ^-------^ SC2229 (warning): This does not read 'var_name'. Remove $/${} for that, or use ${var?} to quiet.
               ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    if read -r "$var_name"; then


In moonfrp.sh line 309:
        local input_value=$(eval echo \$$var_name)
              ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                        ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
        local input_value=$(eval echo \$"$var_name")


In moonfrp.sh line 311:
            eval $var_name="$default_value"
                 ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
            eval "$var_name"="$default_value"


In moonfrp.sh line 330:
    read -r $var_name
            ^-------^ SC2229 (warning): This does not read 'var_name'. Remove $/${} for that, or use ${var?} to quiet.
            ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    read -r "$var_name"


In moonfrp.sh line 339:
    local input_value=$(eval echo \$$var_name)
          ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                    ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    local input_value=$(eval echo \$"$var_name")


In moonfrp.sh line 341:
        eval $var_name="$default_value"
             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
        eval "$var_name"="$default_value"


In moonfrp.sh line 354:
    read -r $var_name
            ^-------^ SC2229 (warning): This does not read 'var_name'. Remove $/${} for that, or use ${var?} to quiet.
            ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    read -r "$var_name"


In moonfrp.sh line 364:
    local input_value=$(eval echo \$$var_name)
          ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                    ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    local input_value=$(eval echo \$"$var_name")


In moonfrp.sh line 366:
        eval $var_name="$default_value"
             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
        eval "$var_name"="$default_value"


In moonfrp.sh line 379:
    read -r $var_name
            ^-------^ SC2229 (warning): This does not read 'var_name'. Remove $/${} for that, or use ${var?} to quiet.
            ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    read -r "$var_name"


In moonfrp.sh line 389:
    local input_value=$(eval echo \$$var_name)
          ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                    ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    local input_value=$(eval echo \$"$var_name")


In moonfrp.sh line 391:
        eval $var_name="$default_value"
             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
        eval "$var_name"="$default_value"


In moonfrp.sh line 447:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 455:
validate_ip() {
^-- SC2329 (info): This function is never invoked. Check usage (or ignored if invoked indirectly).


In moonfrp.sh line 467:
validate_port() {
^-- SC2329 (info): This function is never invoked. Check usage (or ignored if invoked indirectly).


In moonfrp.sh line 493:
validate_domain() {
^-- SC2329 (info): This function is never invoked. Check usage (or ignored if invoked indirectly).


In moonfrp.sh line 740:
                SELECTED_PROXY_TYPE="plugin_http2https"
                ^-----------------^ SC2034 (warning): SELECTED_PROXY_TYPE appears unused. Verify use (or export if used externally).


In moonfrp.sh line 758:
    local domains=""
          ^-----^ SC2034 (warning): domains appears unused. Verify use (or export if used externally).


In moonfrp.sh line 775:
        read -p "Custom domain (or press Enter for auto): " domain
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 829:
    local server_addr=$(grep "serverAddr" "$config_file" | head -1 | cut -d'"' -f2)
          ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 830:
    local server_port=$(grep "serverPort" "$config_file" | head -1 | cut -d'=' -f2 | tr -d ' ')
          ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 953:
        local response=$(curl -s --connect-timeout 3 "$api_url" 2>/dev/null)
              ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 959:
            local status=$(echo "$response" | grep -o '"status":"[^"]*"' | cut -d'"' -f4)
                  ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 960:
            local today_in=$(echo "$response" | grep -o '"today_in":[0-9]*' | cut -d':' -f2)
                  ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 961:
            local today_out=$(echo "$response" | grep -o '"today_out":[0-9]*' | cut -d':' -f2)
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 962:
            local cur_conns=$(echo "$response" | grep -o '"cur_conns":[0-9]*' | cut -d':' -f2)
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 965:
            [[ -n "$today_in" ]] && echo -e "  Today In: ${CYAN}$(format_bytes $today_in)${NC}"
                                                                               ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
            [[ -n "$today_in" ]] && echo -e "  Today In: ${CYAN}$(format_bytes "$today_in")${NC}"


In moonfrp.sh line 966:
            [[ -n "$today_out" ]] && echo -e "  Today Out: ${CYAN}$(format_bytes $today_out)${NC}"
                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
            [[ -n "$today_out" ]] && echo -e "  Today Out: ${CYAN}$(format_bytes "$today_out")${NC}"


In moonfrp.sh line 1002:
    local services=($(systemctl list-units --type=service --state=active --no-legend --plain | grep -E "(frpc|frps)" | awk '{print $1}' | sed 's/\.service//'))
                    ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 1015:
        local status=$(systemctl is-active "$service" 2>/dev/null)
              ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1024:
            local suffix=$(echo "$service" | grep -o '[0-9]\+$')
                  ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1034:
            local proxy_count=$(grep -c "^\[\[proxies\]\]" "$config_file" 2>/dev/null || echo "0")
                  ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1050:
            local server_addr=$(grep "serverAddr" "$config_file" | head -1 | cut -d'"' -f2)
                  ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1051:
            local server_port=$(grep "serverPort" "$config_file" | head -1 | cut -d'=' -f2 | tr -d ' ')
                  ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1070:
get_config_template() {
^-- SC2120 (warning): get_config_template references arguments, but none are ever passed.


In moonfrp.sh line 1140:
                read -p "Choice [1-3]: " db_choice
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1159:
                read -p "Choice [1-3]: " game_choice
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1165:
                        read -p "Enter custom game port: " custom_port
                        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1193:
                read -p "Choice [1-3]: " rdp_choice
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1216:
                read -p "Enter ports (comma-separated, e.g., 1111,2222,3333): " custom_ports
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1220:
                    read -p "Press Enter to continue..."
                    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1237:
                read -p "Choose protocol [1-4]: " proto_choice
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1284:
    echo -e "${GREEN}Template:${NC} $TEMPLATE_CONFIG["name"]"
                                    ^-- SC1087 (error): Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).
                                    ^--------------^ SC2128 (warning): Expanding an array without an index only gives the first element.
                                                      ^--^ SC2140 (warning): Word is of the form "A"B"C" (B indicated). Did you mean "ABC" or "A\"B\"C"?


In moonfrp.sh line 1285:
    echo -e "${GREEN}Description:${NC} $TEMPLATE_CONFIG["description"]"
                                       ^-- SC1087 (error): Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).
                                       ^--------------^ SC2128 (warning): Expanding an array without an index only gives the first element.
                                                         ^---------^ SC2140 (warning): Word is of the form "A"B"C" (B indicated). Did you mean "ABC" or "A\"B\"C"?


In moonfrp.sh line 1286:
    echo -e "${GREEN}Proxy Type:${NC} $TEMPLATE_CONFIG["proxy_type"]"
                                      ^-- SC1087 (error): Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).
                                      ^--------------^ SC2128 (warning): Expanding an array without an index only gives the first element.
                                                        ^--------^ SC2140 (warning): Word is of the form "A"B"C" (B indicated). Did you mean "ABC" or "A\"B\"C"?


In moonfrp.sh line 1287:
    echo -e "${GREEN}Ports:${NC} $TEMPLATE_CONFIG["ports"]"
                                 ^-- SC1087 (error): Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).
                                 ^--------------^ SC2128 (warning): Expanding an array without an index only gives the first element.
                                                   ^---^ SC2140 (warning): Word is of the form "A"B"C" (B indicated). Did you mean "ABC" or "A\"B\"C"?


In moonfrp.sh line 1291:
    IFS=',' read -ra PORT_ARRAY <<< "$TEMPLATE_CONFIG["ports"]"
                                     ^-- SC1087 (error): Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).
                                     ^--------------^ SC2128 (warning): Expanding an array without an index only gives the first element.
                                                       ^---^ SC2140 (warning): Word is of the form "A"B"C" (B indicated). Did you mean "ABC" or "A\"B\"C"?


In moonfrp.sh line 1353:
            local server_bind_port=$(grep "bindPort" "$config_file" 2>/dev/null | awk '{print $3}' | tr -d '"')
                  ^--------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1354:
            local dashboard_port=$(grep "webServer.port" "$config_file" 2>/dev/null | awk '{print $3}' | tr -d '"')
                  ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1377:
            local backup_dir="/etc/frp/backup_$(date +%Y%m%d_%H%M%S)"
                  ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1588:
    local client_ips="$4"
          ^--------^ SC2034 (warning): client_ips appears unused. Verify use (or export if used externally).


In moonfrp.sh line 1596:
    local timestamp=$(date +%s)
          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1690:
    local enable_bandwidth="${9:-false}"
          ^--------------^ SC2034 (warning): enable_bandwidth appears unused. Verify use (or export if used externally).


In moonfrp.sh line 1733:
        local visitor_config=$(generate_visitor_config "$server_ip" "$server_port" "$token" "$config_file" "$secret_key" "$proxy_type" "$ports" "$ip_suffix" "$transport_protocol")
              ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 1765:
    read -p "Select transport protocol [1-5] (default: 1): " protocol_choice
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1820:
    read -p "Select bandwidth profile [1-5] (default: 1): " bw_choice
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1845:
            read -p "Incoming bandwidth limit (e.g., 2MB, 500KB): " GLOBAL_BANDWIDTH_IN
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 1846:
            read -p "Outgoing bandwidth limit (e.g., 1MB, 200KB): " GLOBAL_BANDWIDTH_OUT
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 2300:
    local visitor_port=8000
          ^----------^ SC2034 (warning): visitor_port appears unused. Verify use (or export if used externally).


In moonfrp.sh line 2502:
clear_performance_caches() {
^-- SC2329 (info): This function is never invoked. Check usage (or ignored if invoked indirectly).


In moonfrp.sh line 2567:
    local current_time=$(date +%s)
          ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 2576:
    local status=$(systemctl is-active "$service_name" 2>/dev/null || echo "inactive")
          ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 2597:
                local ip_suffix=$(echo "$service_name" | grep -o 'client-[0-9]\+' | cut -d'-' -f2)
                      ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 2660:
                    local ip_suffix=$(echo "$service" | grep -o 'client-[0-9]\+' | cut -d'-' -f2)
                          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 2734:
            local status=$(systemctl is-active "$service" 2>/dev/null || echo "inactive")
                  ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 2735:
            local enabled=$(systemctl is-enabled "$service" 2>/dev/null || echo "disabled")
                  ^-----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 2743:
                local uptime=$(systemctl show "$service" -p ActiveEnterTimestamp --value 2>/dev/null)
                      ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 2745:
                    local uptime_formatted=$(date -d "$uptime" '+%Y-%m-%d %H:%M:%S' 2>/dev/null || echo "Unknown")
                          ^--------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 2749:
                local memory_usage=$(systemctl show "$service" -p MemoryCurrent --value 2>/dev/null)
                      ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 2789:
    local cleanup_type="${1:-all}"  # all, client, server
          ^----------^ SC2034 (warning): cleanup_type appears unused. Verify use (or export if used externally).


In moonfrp.sh line 2795:
    local all_frp_services=($(systemctl list-units --type=service --all --no-legend --plain 2>/dev/null | grep -E "(frp|moonfrp)" | awk '{print $1}' | sed 's/\.service//'))
                            ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 2796:
    local all_frp_configs=($(ls "$CONFIG_DIR"/{frp*.toml,frpc_*.toml,frps_*.toml,frpc_visitor_*.toml} 2>/dev/null))
                           ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 2797:
    local all_frp_logs=($(ls "$LOG_DIR"/{frp*.log,frpc_*.log,frps_*.log} 2>/dev/null))
                        ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 2988:
    local temp_script="/tmp/moonfrp_check_$(date +%s).sh"
          ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3099:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 3116:
    local backup_dir="/tmp/moonfrp_backup_$(date +%Y%m%d_%H%M%S)"
          ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3209:
    local spinner='|/-\'
                      ^-- SC1003 (info): Want to escape a single quote? echo 'This is how it'\''s done'.


In moonfrp.sh line 3239:
    local current_time=$(date +%s)
          ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3240:
    if [[ -z "${CACHE_DATA["services"]}" ]] || [[ $((current_time - ${CACHE_DATA["services_time"]})) -gt 10 ]]; then
                                                                    ^----------------------------^ SC2004 (style): $/${} is unnecessary on arithmetic variables.


In moonfrp.sh line 3397:
    local status=$(systemctl is-active "$selected_service" 2>/dev/null || echo "inactive")
          ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3398:
    local enabled=$(systemctl is-enabled "$selected_service" 2>/dev/null || echo "disabled")
          ^-----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3399:
    local uptime=$(systemctl show "$selected_service" -p ActiveEnterTimestamp --value 2>/dev/null)
          ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3406:
        local uptime_formatted=$(date -d "$uptime" '+%Y-%m-%d %H:%M:%S' 2>/dev/null || echo "Unknown")
              ^--------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3411:
    local memory_usage=$(systemctl show "$selected_service" -p MemoryCurrent --value 2>/dev/null)
          ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3425:
        local ip_suffix=$(echo "$selected_service" | grep -o '[0-9]\+$')
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3435:
        echo -e "  Size: ${YELLOW}$(ls -lh "$config_file" | awk '{print $5}')${NC}"
                                    ^-------------------^ SC2012 (info): Use find instead of ls to better handle non-alphanumeric filenames.


In moonfrp.sh line 3440:
            local bind_port=$(grep "bindPort" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3441:
            local dashboard_port=$(grep "webServer.port" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3442:
            local token=$(grep "auth.token" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^---^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3449:
            local server_addr=$(grep "serverAddr" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3450:
            local server_port=$(grep "serverPort" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3451:
            local proxy_count=$(grep -c "^\[\[proxies\]\]" "$config_file" 2>/dev/null || echo "0")
                  ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3463:
            local bind_port=$(grep "bindPort" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3464:
            local dashboard_port=$(grep "webServer.port" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3483:
            local server_addr=$(grep "serverAddr" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3484:
            local server_port=$(grep "serverPort" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3495:
            local proxy_names=($(grep "name = " "$config_file" 2>/dev/null | awk '{print $3}' | tr -d '"'))
                               ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 3496:
            local proxy_ports=($(grep "remotePort = " "$config_file" 2>/dev/null | awk '{print $3}' | tr -d '"'))
                               ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 3519:
    local log_count=$(journalctl -u "$selected_service" -n 5 --no-pager -q 2>/dev/null | wc -l)
          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3531:
        local log_level=$(grep "log.level" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3532:
        local log_file=$(grep "log.to" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
              ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3585:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 3601:
    local current_level=$(grep "log.level" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
          ^-----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3711:
        local bind_port=$(grep "bindPort" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3722:
        local dashboard_port=$(grep "webServer.port" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
              ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3741:
        local public_ip=$(curl -s --connect-timeout 5 ipinfo.io/ip 2>/dev/null || echo "Unable to determine")
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3748:
        local server_addr=$(grep "serverAddr" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
              ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3749:
        local server_port=$(grep "serverPort" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
              ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3777:
        local proxy_names=($(grep "name = " "$config_file" 2>/dev/null | awk '{print $3}' | tr -d '"'))
                           ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 3778:
        local local_ports=($(grep "localPort = " "$config_file" 2>/dev/null | awk '{print $3}' | tr -d '"'))
                           ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 3799:
    local token=$(grep "auth.token" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
          ^---^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3812:
    local status=$(systemctl is-active "$service_name" 2>/dev/null || echo "inactive")
          ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3816:
    local pid=$(systemctl show "$service_name" -p MainPID --value 2>/dev/null)
          ^-^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3819:
        local connections=$(netstat -antp 2>/dev/null | grep "$pid" | wc -l)
              ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                        ^---------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 3838:
        local total_logs=$(journalctl -u "$selected_service" --no-pager -q | wc -l)
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3839:
        local today_logs=$(journalctl -u "$selected_service" --since today --no-pager -q | wc -l)
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3840:
        local hour_logs=$(journalctl -u "$selected_service" --since "1 hour ago" --no-pager -q | wc -l)
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3841:
        local error_logs=$(journalctl -u "$selected_service" --since "24 hours ago" --no-pager -q | grep -i error | wc -l)
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                                                    ^-----------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 3842:
        local warn_logs=$(journalctl -u "$selected_service" --since "24 hours ago" --no-pager -q | grep -i warn | wc -l)
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                                                   ^----------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 3856:
            local ip_suffix=$(echo "$selected_service" | grep -o '[0-9]\+$')
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3863:
            local log_file=$(grep "log.to" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3864:
            local log_level=$(grep "log.level" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 3867:
                local file_size=$(ls -lh "$log_file" | awk '{print $5}')
                      ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                  ^----------------^ SC2012 (info): Use find instead of ls to better handle non-alphanumeric filenames.


In moonfrp.sh line 3961:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 3997:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4004:
    local results=$(journalctl -u "$service_name" --no-pager -q | grep -i "$search_term" | wc -l)
          ^-----^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                  ^--------------------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 4025:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4072:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4091:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4138:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4146:
    local results=$(journalctl -u "$service_name" --no-pager -q | grep -iE "$filter_pattern" | wc -l)
          ^-----^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                  ^------------------------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 4162:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4174:
    local total_errors=$(journalctl -u "$service_name" --since "24 hours ago" --no-pager -q | grep -iE "ERROR|FAILED|FAIL" | wc -l)
          ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                                              ^--------------------------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 4175:
    local connection_errors=$(journalctl -u "$service_name" --since "24 hours ago" --no-pager -q | grep -iE "connection|connect" | grep -iE "ERROR|FAILED|FAIL" | wc -l)
          ^---------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                                                                                   ^--------------------------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 4176:
    local auth_errors=$(journalctl -u "$service_name" --since "24 hours ago" --no-pager -q | grep -iE "auth|token" | grep -iE "ERROR|FAILED|FAIL" | wc -l)
          ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                                                                     ^--------------------------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 4177:
    local timeout_errors=$(journalctl -u "$service_name" --since "24 hours ago" --no-pager -q | grep -iE "timeout|timed out" | wc -l)
          ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                                                ^--------------------------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 4195:
            while read count message; do
                  ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4217:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4228:
    local timestamp=$(date +"%Y%m%d_%H%M%S")
          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4257:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4265:
        local file_size=$(ls -lh "$export_file" | awk '{print $5}')
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                          ^-------------------^ SC2012 (info): Use find instead of ls to better handle non-alphanumeric filenames.


In moonfrp.sh line 4280:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4291:
    local current_size=$(journalctl -u "$service_name" --no-pager -q | wc -l)
          ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4314:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4337:
            local ip_suffix=$(echo "$service_name" | grep -o '[0-9]\+$')
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4344:
            local log_file=$(grep "log.to" "$config_file" 2>/dev/null | head -1 | awk '{print $3}' | tr -d '"')
                  ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4347:
                    > "$log_file"
                    ^-----------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).


In moonfrp.sh line 4355:
        local new_size=$(journalctl -u "$service_name" --no-pager -q | wc -l)
              ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4364:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4393:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4467:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4473:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4480:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4509:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4528:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4540:
        local bind_port=$(grep "bindPort" "$CONFIG_DIR/frps.toml" | head -1 | awk '{print $3}')
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4541:
        local token=$(grep "auth.token" "$CONFIG_DIR/frps.toml" | head -1 | awk '{print $3}' | tr -d '"')
              ^---^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4542:
        local dashboard_port=$(grep "webServer.port" "$CONFIG_DIR/frps.toml" | head -1 | awk '{print $3}')
              ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4543:
        local subdomain=$(grep "subDomainHost" "$CONFIG_DIR/frps.toml" | head -1 | awk '{print $3}' | tr -d '"')
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4544:
        local max_ports=$(grep "maxPortsPerClient" "$CONFIG_DIR/frps.toml" | head -1 | awk '{print $3}')
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4545:
        local kcp_enabled=$(grep "kcpBindPort" "$CONFIG_DIR/frps.toml" | head -1 | awk '{print $3}' | wc -l)
              ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4546:
        local quic_enabled=$(grep "quicBindPort" "$CONFIG_DIR/frps.toml" | head -1 | awk '{print $3}' | wc -l)
              ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4677:
                local server_port=$(grep "bindPort" "$CONFIG_DIR/frps.toml" | head -1 | awk '{print $3}')
                      ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4686:
                local server_port=$(grep "bindPort" "$CONFIG_DIR/frps.toml" | head -1 | awk '{print $3}')
                      ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4735:
                local services=($(systemctl list-units --type=service --all --no-legend --plain | grep moonfrps | awk '{print $1}' | sed 's/\.service//'))
                                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 4759:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4764:
    local services=($(systemctl list-units --type=service --all --no-legend --plain | grep moonfrps | awk '{print $1}' | sed 's/\.service//'))
                    ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 4913:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4918:
    local existing_servers=($(systemctl list-units --type=service --all --no-legend --plain 2>/dev/null | grep moonfrps | awk '{print $1}' | sed 's/\.service//'))
                            ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 4919:
    local existing_server_configs=($(ls "$CONFIG_DIR"/frps*.toml 2>/dev/null))
                                   ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 4927:
                local server_status=$(systemctl is-active "$server" 2>/dev/null || echo "inactive")
                      ^-----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4965:
    local timestamp=$(date +%s)
          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4973:
    local original_config_dir="$CONFIG_DIR"
          ^-----------------^ SC2034 (warning): original_config_dir appears unused. Verify use (or export if used externally).


In moonfrp.sh line 4983:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 4988:
        local timestamp=$(date +%s)
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 4989:
        local random_suffix=$(head -c 4 /dev/urandom | base64 | tr -d '=+/' | head -c4)
              ^-----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5005:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5014:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5025:
            local service_status=$(get_service_status "$server_service_name")
                  ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5037:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5055:
        local primary_ip=$(hostname -I | awk '{print $1}')
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5057:
        local public_ips=$(hostname -I | tr ' ' '\n' | grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$' | grep -v -E '^(10\.|172\.(1[6-9]|2[0-9]|3[0-1])\.|192\.168\.|127\.)' | tr '\n' ',' | sed 's/,$//')
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5089:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5093:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5225:
            if get_config_template; then
               ^-----------------^ SC2119 (info): Use get_config_template "$@" if function's $1 should mean script's $1.


In moonfrp.sh line 5227:
                    ports="$TEMPLATE_CONFIG["ports"]"
                           ^-- SC1087 (error): Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).
                           ^--------------^ SC2128 (warning): Expanding an array without an index only gives the first element.
                                             ^---^ SC2140 (warning): Word is of the form "A"B"C" (B indicated). Did you mean "ABC" or "A\"B\"C"?


In moonfrp.sh line 5228:
                    proxy_type="$TEMPLATE_CONFIG["proxy_type"]"
                                ^-- SC1087 (error): Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).
                                ^--------------^ SC2128 (warning): Expanding an array without an index only gives the first element.
                                                  ^--------^ SC2140 (warning): Word is of the form "A"B"C" (B indicated). Did you mean "ABC" or "A\"B\"C"?


In moonfrp.sh line 5229:
                    echo -e "\n${GREEN}✅ Using template: $TEMPLATE_CONFIG["name"]${NC}"
                                                         ^-- SC1087 (error): Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).
                                                         ^--------------^ SC2128 (warning): Expanding an array without an index only gives the first element.
                                                                           ^--^ SC2140 (warning): Word is of the form "A"B"C" (B indicated). Did you mean "ABC" or "A\"B\"C"?


In moonfrp.sh line 5233:
                    read -p "Press Enter to continue..."
                    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5238:
                read -p "Press Enter to continue..."
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5284:
                    read -p "Choose plugin [1-7]: " plugin_choice
                    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5345:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5350:
    local existing_clients=($(systemctl list-units --type=service --all --no-legend --plain 2>/dev/null | grep moonfrpc | awk '{print $1}' | sed 's/\.service//'))
                            ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 5351:
    local existing_configs=($(ls "$CONFIG_DIR"/frpc_*.toml "$CONFIG_DIR"/frpc_visitor_*.toml 2>/dev/null))
                            ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 5359:
                local client_status=$(systemctl is-active "$client" 2>/dev/null || echo "inactive")
                      ^-----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5426:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5441:
        local ip_suffix=$(echo "$ip" | cut -d'.' -f4)
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5466:
            local client_timestamp=$(date +%s)
                  ^--------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5467:
            local client_random=$(head -c 4 /dev/urandom | base64 | tr -d '=+/' | head -c4)
                  ^-----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5521:
            local ip_suffix=$(echo "$ip" | cut -d'.' -f4)
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5523:
            local service_status=$(get_service_status "$service_name")
                  ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5620:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5655:
    local services=($(systemctl list-units --type=service --all --no-legend --plain | grep -E "(moonfrp|frp)" | awk '{print $1}' | sed 's/\.service//'))
                    ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 5659:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5675:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5682:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5696:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5708:
    local services=($(systemctl list-units --type=service --all --no-legend --plain | grep -E "(moonfrp|frp)" | awk '{print $1}' | sed 's/\.service//'))
                    ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 5712:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5740:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5789:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5794:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5815:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5823:
    crontab -l > /tmp/moonfrp_crontab_backup_$(date +%s) 2>/dev/null || true
                                             ^---------^ SC2046 (warning): Quote this to prevent word splitting.


In moonfrp.sh line 5826:
    local temp_crontab="/tmp/moonfrp_new_crontab_$(date +%s)"
          ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 5865:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5870:
    local services=($(systemctl list-units --type=service --all --no-legend --plain | grep -E "(moonfrp|frp)" | awk '{print $1}' | sed 's/\.service//'))
                    ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 5874:
        read -p "Press Enter to continue..."
        ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5896:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 5966:
                CACHE_DATA["last_update_check"]="available"
                ^-----------------------------^ SC2030 (info): Modification of CACHE_DATA is local (to subshell caused by (..) group).


In moonfrp.sh line 5980:
    [[ -z "${CACHE_DATA["frp_installation"]}" ]] && check_frp_installation_cached >/dev/null
           ^-- SC2031 (info): CACHE_DATA was modified in a subshell. That change might be lost.


In moonfrp.sh line 5981:
    [[ "${CACHE_DATA["update_check_done"]}" == "false" ]] && check_updates_cached
        ^-- SC2031 (info): CACHE_DATA was modified in a subshell. That change might be lost.


In moonfrp.sh line 6020:
        if [[ "${CACHE_DATA["last_update_check"]}" == "available" ]]; then
               ^-- SC2031 (info): CACHE_DATA was modified in a subshell. That change might be lost.


In moonfrp.sh line 6039:
            if [[ -n "${CACHE_DATA["services"]}" ]]; then
                      ^-----------------------^ SC2031 (info): CACHE_DATA was modified in a subshell. That change might be lost.


In moonfrp.sh line 6040:
                service_count=$(echo "${CACHE_DATA["services"]}" | wc -l)
                                      ^-----------------------^ SC2031 (info): CACHE_DATA was modified in a subshell. That change might be lost.


In moonfrp.sh line 6042:
            echo -e "\n${GRAY}[Debug] Menu load time: $(date +%T) | Services cached: $service_count | FRP status: ${CACHE_DATA["frp_installation"]}${NC}"
                                                                                                                  ^-- SC2031 (info): CACHE_DATA was modified in a subshell. That change might be lost.


In moonfrp.sh line 6063:
                read -p "Press Enter to continue..."
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 6069:
                read -p "Press Enter to continue..."
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 6080:
                read -p "Press Enter to continue..."
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 6086:
                read -p "Press Enter to continue..."
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 6092:
                read -p "Press Enter to continue..."
                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 6249:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 6254:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 6268:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 6404:
    return $error_code
           ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    return "$error_code"


In moonfrp.sh line 6768:
            echo "$input" | sed 's/[^a-zA-Z0-9._-]//g'
            ^-- SC2001 (style): See if you can use ${variable//search/replace} instead.


In moonfrp.sh line 6780:
            echo "$input" | sed 's/[[:cntrl:]]//g'
            ^-- SC2001 (style): See if you can use ${variable//search/replace} instead.


In moonfrp.sh line 6808:
    local output_dir=$(dirname "$output_file")
          ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 6822:
    local temp_file=$(mktemp)
          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 6829:
        local escaped_value=$(printf '%s\n' "$var_value" | sed 's/[[\.*^$()+?{|]/\\&/g')
              ^-----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                               ^----------------------^ SC2016 (info): Expressions don't expand in single quotes, use double quotes for that.


In moonfrp.sh line 6853:
    local backup_dir="$BACKUP_DIR"
                      ^---------^ SC2153 (info): Possible misspelling: BACKUP_DIR may not be assigned. Did you mean backup_dir?


In moonfrp.sh line 6854:
    local timestamp=$(date +%Y%m%d_%H%M%S)
          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 6855:
    local filename=$(basename "$config_file")
          ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 6871:
    local file_size=$(stat -f%z "$backup_file" 2>/dev/null || stat -c%s "$backup_file" 2>/dev/null)
          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 6964:
    local open_brackets=$(grep -o '\[' "$toml_file" | wc -l)
          ^-----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 6965:
    local close_brackets=$(grep -o '\]' "$toml_file" | wc -l)
          ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 7224:
    local services=($(systemctl list-units --type=service --all --no-legend --plain | grep -E "(moonfrp|frp)" | awk '{print $1}' | sed 's/\.service//'))
                    ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 7233:
        if [[ " ${services[@]} " =~ " ${target} " ]]; then
              ^----------------^ SC2199 (error): Arrays implicitly concatenate in [[ ]]. Use a loop (or explicit * instead of @).
                                    ^-----------^ SC2076 (warning): Remove quotes from right-hand side of =~ to match as a regex rather than literally.


In moonfrp.sh line 7308:
    local config_files=($(find "$CONFIG_DIR" -name "*.toml" -type f 2>/dev/null))
                        ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 7361:
    local log_files=($(find "$LOG_DIR" -name "*.log" -type f 2>/dev/null))
                     ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 7440:
        local backup_files=($(find "$backup_dir" -name "*.bak*" -type f -mtime +30 2>/dev/null))
                            ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 7530:
    local inactive_services=($(systemctl list-units --type=service --all --no-legend --plain | grep -E "(moonfrp|frp)" | grep "inactive" | awk '{print $1}' | sed 's/\.service//'))
                             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 7552:
    local old_logs=($(find "$LOG_DIR" -name "*.log" -type f -mtime +$days 2>/dev/null))
                    ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).
                                                                    ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.

Did you mean:
    local old_logs=($(find "$LOG_DIR" -name "*.log" -type f -mtime +"$days" 2>/dev/null))


In moonfrp.sh line 7574:
    local config_files=($(find "$CONFIG_DIR" -name "*.toml" -type f 2>/dev/null))
                        ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 7575:
    local active_services=($(systemctl list-units --type=service --all --no-legend --plain | grep -E "(moonfrp|frp)" | grep "active" | awk '{print $1}' | sed 's/\.service//'))
                           ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 7580:
        local config_name=$(basename "$config_file" .toml)
              ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 7652:
        local current_time=$(date +%s)
              ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 7659:
            unset CACHE_DATA["${key}_value"]
                  ^------------------------^ SC2184 (warning): Quote arguments to unset so they're not glob expanded.


In moonfrp.sh line 7660:
            unset CACHE_DATA["${key}_timestamp"]
                  ^----------------------------^ SC2184 (warning): Quote arguments to unset so they're not glob expanded.


In moonfrp.sh line 7672:
    local timestamp=$(date +%s)
          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 7684:
    unset CACHE_DATA["${key}_value"]
          ^------------------------^ SC2184 (warning): Quote arguments to unset so they're not glob expanded.


In moonfrp.sh line 7685:
    unset CACHE_DATA["${key}_timestamp"]
          ^----------------------------^ SC2184 (warning): Quote arguments to unset so they're not glob expanded.


In moonfrp.sh line 7704:
    local current_time=$(date +%s)
          ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 7748:
    local services="$2"     # Space-separated list of services
          ^------^ SC2178 (warning): Variable was used as an array but is now assigned a string.


In moonfrp.sh line 7752:
    if [[ -z "$operation" || -z "$services" ]]; then
                                 ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.


In moonfrp.sh line 7758:
    local service_array=($services)
                         ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.


In moonfrp.sh line 7896:
    local start_time=$(date +%s)
          ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 7902:
        local sample_start=$(date +%s%3N)
              ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 7907:
        local sample_end=$(date +%s%3N)
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8014:
            1) check_all_proxy_conflicts; read -p "Press Enter to continue..." ;;
                                          ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8015:
            2) check_all_port_conflicts; read -p "Press Enter to continue..." ;;
                                         ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8016:
            3) validate_all_connections; read -p "Press Enter to continue..." ;;
                                         ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8017:
            4) view_service_logs_menu; read -p "Press Enter to continue..." ;;
                                       ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8018:
            5) fix_common_issues; read -p "Press Enter to continue..." ;;
                                  ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8019:
            6) generate_diagnostic_report; read -p "Press Enter to continue..." ;;
                                           ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8020:
            7) show_quick_help; read -p "Press Enter to continue..." ;;
                                ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8021:
            8) fix_web_panel_issues; read -p "Press Enter to continue..." ;;
                                     ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8022:
            9) monitor_all_proxies; read -p "Press Enter to continue..." ;;
                                    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8224:
    read -n 1 -s
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8242:
    read -n 1 -s
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8259:
        local total_logs=$(journalctl -u "$service" --no-pager -q | wc -l)
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8260:
        local today_logs=$(journalctl -u "$service" --since today --no-pager -q | wc -l)
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8261:
        local hour_logs=$(journalctl -u "$service" --since "1 hour ago" --no-pager -q | wc -l)
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8262:
        local error_logs=$(journalctl -u "$service" --since "24 hours ago" --no-pager -q | grep -i error | wc -l)
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                                           ^-----------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 8263:
        local warn_logs=$(journalctl -u "$service" --since "24 hours ago" --no-pager -q | grep -i warn | wc -l)
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                                          ^----------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 8313:
        local services=($(systemctl list-units --type=service --all --no-legend --plain | grep -E "(moonfrp|frp)" | awk '{print $1}' | sed 's/\.service//'))
                        ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 8317:
            read -p "Press Enter to continue..."
            ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8345:
    local services=($(systemctl list-units --type=service --all --no-legend --plain | grep -E "(moonfrp|frp)" | awk '{print $1}' | sed 's/\.service//'))
                    ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 8424:
            local services=($(systemctl list-units --type=service --all --no-legend --plain | grep -E "(moonfrp|frp)" | awk '{print $1}' | sed 's/\.service//'))
                            ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 8444:
    local report_file="/tmp/moonfrp_diagnostic_$(date +%Y%m%d_%H%M%S).txt"
          ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8537:
        echo -e "    frps: $(ls -la $FRP_DIR/frps 2>/dev/null | awk '{print $5, $6, $7, $8}' || echo 'Not found')"
                             ^-- SC2012 (info): Use find instead of ls to better handle non-alphanumeric filenames.


In moonfrp.sh line 8538:
        echo -e "    frpc: $(ls -la $FRP_DIR/frpc 2>/dev/null | awk '{print $5, $6, $7, $8}' || echo 'Not found')"
                             ^-- SC2012 (info): Use find instead of ls to better handle non-alphanumeric filenames.


In moonfrp.sh line 8544:
    local services=($(systemctl list-units --type=service --all --no-legend --plain 2>/dev/null | grep -E "(moonfrp|frp)" | awk '{print $1}' | sed 's/\.service//' || echo ""))
                    ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 8548:
            local status=$(get_service_status "$service")
                  ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8559:
    local config_count=$(ls "$CONFIG_DIR"/*.toml 2>/dev/null | wc -l)
          ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                         ^-- SC2012 (info): Use find instead of ls to better handle non-alphanumeric filenames.


In moonfrp.sh line 8604:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 8623:
        local current_time=$(date +%s)
              ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8642:
            local services=($(systemctl list-units --type=service --no-legend --plain 2>/dev/null | grep -E "(moonfrp|frp)" | awk '{print $1}' | sed 's/\.service//'))
                            ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 8660:
                    local status=$(systemctl is-active "$service" 2>/dev/null || echo "inactive")
                          ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8675:
                            local start_time=$(date -d "$uptime" +%s 2>/dev/null || echo "0")
                                  ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8676:
                            local current_time=$(date +%s)
                                  ^----------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8719:
            local filename=$(basename "$config_file")
                  ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8720:
            local filesize=$(ls -lh "$config_file" | awk '{print $5}')
                  ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                             ^-------------------^ SC2012 (info): Use find instead of ls to better handle non-alphanumeric filenames.


In moonfrp.sh line 8721:
            local modified=$(stat -c %y "$config_file" 2>/dev/null | cut -d' ' -f1 || echo "Unknown")
                  ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8744:
            local ip_suffix=$(basename "$config_file" | sed 's/frpc_//' | sed 's/.toml//')
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8757:
                local proxy_count=$(grep -c "^\[\[proxies\]\]" "$config_file" 2>/dev/null || echo "0")
                      ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8777:
                local service_status=$(systemctl is-active "$service_name" 2>/dev/null || echo "inactive")
                      ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8836:
            local filename=$(basename "$config_file")
                  ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8837:
            local proxy_count=$(grep -c "^\[\[proxies\]\]" "$config_file" 2>/dev/null || echo "0")
                  ^---------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8854:
                    local names_str=$(printf ", %s" "${proxy_names[@]}")
                          ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8870:
        local mem_info=$(free -h | grep "Mem:" | awk '{print $3 "/" $2}')
              ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8874:
        local cpu_load=$(uptime | awk -F'load average:' '{print $2}' | sed 's/^ *//')
              ^------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8878:
        local tcp_connections=$(ss -t state established 2>/dev/null | wc -l)
              ^-------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8928:
        local primary_ip=$(hostname -I | awk '{print $1}')
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8929:
        local public_ips=$(hostname -I | tr ' ' '\n' | grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$' | grep -v -E '^(10\.|172\.(1[6-9]|2[0-9]|3[0-1])\.|192\.168\.|127\.)' | tr '\n' ',' | sed 's/,$//')
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8938:
        local server_services=($(systemctl list-units --type=service --state=active --no-legend --plain 2>/dev/null | grep moonfrps | awk '{print $1}' | sed 's/\.service//'))
                               ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 8951:
    local client_configs=($(ls "$CONFIG_DIR"/frpc_*.toml 2>/dev/null))
                          ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).


In moonfrp.sh line 8987:
        local ips_str=$(IFS=','; echo "${all_ips[*]}")
              ^-----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8988:
        local ports_str=$(IFS=','; echo "${all_ports[*]}")
              ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 8998:
            local ip_suffix=$(basename "$config_file" | sed 's/frpc_//' | sed 's/.toml//')
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 9010:
            local ports_list=$(IFS=','; echo "${config_ports[*]}")
                  ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 9012:
            local service_status=$(systemctl is-active "$service_name" 2>/dev/null || echo "inactive")
                  ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 9048:
    local active_services=$(systemctl list-units --type=service --state=active --no-legend --plain 2>/dev/null | grep -E "(moonfrps|moonfrpc)" | wc -l)
          ^-------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
          ^-------------^ SC2178 (warning): Variable was used as an array but is now assigned a string.
                                                                                                                 ^---------------------------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 9049:
    local total_services=$(systemctl list-units --type=service --all --no-legend --plain 2>/dev/null | grep -E "(moonfrps|moonfrpc)" | wc -l)
          ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.
                                                                                                       ^---------------------------^ SC2126 (style): Consider using 'grep -c' instead of 'grep|wc -l'.


In moonfrp.sh line 9051:
    echo -e "  ${CYAN}Services:${NC} ${GREEN}$active_services active${NC} / ${YELLOW}$total_services total${NC}"
                                             ^--------------^ SC2128 (warning): Expanding an array without an index only gives the first element.


In moonfrp.sh line 9058:
    read -p "Press Enter to continue..."
    ^--^ SC2162 (info): read without -r will mangle backslashes.


In moonfrp.sh line 9085:
            server_running=true
            ^------------^ SC2034 (warning): server_running appears unused. Verify use (or export if used externally).


In moonfrp.sh line 9182:
        local ufw_status=$(ufw status 2>/dev/null | grep -E "(Status: active|Status: inactive)" || echo "unknown")
              ^--------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 9200:
            local iptables_rules=$(iptables -L INPUT -n 2>/dev/null | grep -c "$dashboard_port" || echo "0")
                  ^------------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 9247:
                local new_token=$(generate_token)
                      ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 9277:
            local server_ip=$(hostname -I | awk '{print $1}')
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 9288:
                    local status=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 3 "$url" 2>/dev/null || echo "000")
                          ^----^ SC2155 (warning): Declare and assign separately to avoid masking return values.


In moonfrp.sh line 9301:
            local server_ip=$(hostname -I | awk '{print $1}')
                  ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.

For more information:
  https://www.shellcheck.net/wiki/SC1087 -- Use braces when expanding arrays,...
  https://www.shellcheck.net/wiki/SC2199 -- Arrays implicitly concatenate in ...
  https://www.shellcheck.net/wiki/SC2034 -- MOONFRP_REPO_URL appears unused. ...
